@page "/lesson-card-builder"
@rendermode InteractiveServer
@using bgbahasajerman_RazorClassLibrary.Components

<h1>Lesson Card Builder (Skeleton)</h1>

<!-- Section-level controls -->
<button type="button" @onclick="AddSection">+ Add Section</button>
<button type="button" @onclick="RemoveSection" disabled="@(cellCounts.Count == 0)">− Remove Section</button>

<p>Total sections: @cellCounts.Count</p>
<p style="color:#666;font-size:.9rem">[page debug] cellCounts = @string.Join(",", cellCounts)</p>

<hr />

<!-- Per-section controls (each section has its own Add/Remove Cell) -->
@for (int i = 0; i < cellCounts.Count; i++)
{
    <div style="margin:.4rem 0;">
        <strong>Section @(i + 1)</strong> — Cells: <span style="font-family:monospace">@cellCounts[i]</span>
        <button type="button" @onclick="() => AddCellTo(i)">+ Add cell</button>
        <button type="button" @onclick="() => RemoveCellFrom(i)" disabled="@(cellCounts[i] == 0)">− Remove cell</button>
    </div>
}

<hr />

<!-- Pass counts; force remount with @key -->
<LessonCardSkeleton CellCounts="@cellCounts.ToList()" @key="rev" />



@code {
    private List<int> cellCounts = new();
    private int rev; // 👈 add this

    private void AddSection()
    {
        cellCounts.Add(0);
        Refresh();
    }

    private void RemoveSection()
    {
        if (cellCounts.Count == 0) return;
        cellCounts.RemoveAt(cellCounts.Count - 1);
        Refresh();
    }

    private void AddCellTo(int sectionIndex)
    {
        Console.WriteLine($"Adding cell to section {sectionIndex}");
        if (!IsValidSection(sectionIndex)) return;
        cellCounts[sectionIndex] += 1;
        Refresh();
    }

    private void RemoveCellFrom(int sectionIndex)
    {
        if (!IsValidSection(sectionIndex)) return;
        if (cellCounts[sectionIndex] > 0) cellCounts[sectionIndex] -= 1;
        Refresh();
    }

    private bool IsValidSection(int index) => index >= 0 && index < cellCounts.Count;

    private void Refresh()
    {
        // (re)create a new list reference, bump rev, re-render
        cellCounts = new List<int>(cellCounts);
        rev++;                  // 👈 this forces the child to remount
        StateHasChanged();
    }
}

